package logReaderTest;

import java.util.LinkedList;
import java.util.Stack;

public class PrintUnixStylePath {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String s = "/a/./b/../../c/";
		System.out.println(getPath(s));
	}

	public static String getPath(String s) {
		Stack<String> stack = new Stack<>();
		String[] split = s.split("/");
		for (String str : split) {
			if (str.equalsIgnoreCase("..")) {
				if (!stack.isEmpty()) {
					stack.pop();
				}
			} else if (str.equalsIgnoreCase(".")) {
				continue;
			} else {
				stack.push(str);
			}
		}
		
		StringBuilder br = new StringBuilder();
		while (!stack.isEmpty()) {
			br.append(stack.pop());
		}
		return br.toString();
	}

	public static String simplifyPath(String path) {
		Stack<String> stack = new Stack<String>();

		// stack.push(path.substring(0,1));

		while (path.length() > 0 && path.charAt(path.length() - 1) == '/') {
			path = path.substring(0, path.length() - 1);
		}

		int start = 0;
		for (int i = 1; i < path.length(); i++) {
			if (path.charAt(i) == '/') {
				stack.push(path.substring(start, i));
				start = i;
			} else if (i == path.length() - 1) {
				stack.push(path.substring(start));
			}
		}

		LinkedList<String> result = new LinkedList<String>();
		int back = 0;
		while (!stack.isEmpty()) {
			String top = stack.pop();

			if (top.equals("/.") || top.equals("/")) {
				// nothing
			} else if (top.equals("/..")) {
				back++;
			} else {
				if (back > 0) {
					back--;
				} else {
					result.push(top);
				}
			}
		}

		// if empty, return "/"
		if (result.isEmpty()) {
			return "/";
		}

		StringBuilder sb = new StringBuilder();
		while (!result.isEmpty()) {
			String s = result.pop();
			sb.append(s);
		}

		return sb.toString();
	}
}
