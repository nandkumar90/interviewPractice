package Number;
//O(n)
public class LongestSubArrayWithExactlyKoddNumber {
	// function to find the longest sub-array
	// having exactly k odd numbers
	static int longSubarrWithKOddNum(int arr[], int n, int k) {
		int max = 0, count = 0, start = 0;

		// traverse the given array
		for (int i = 0; i < n; i++) {
			// if number is odd increment count
			if (arr[i] % 2 != 0)
				count++;

			// remove elements from sub-array from
			// 'start' index when count > k
			while (count > k && start <= i)
				if (arr[start++] % 2 != 0)
					count--;

			// if count == k, then compare max
			// with current sub-array length
			if (count == k)
				if (max < (i - start + 1))
					max = i - start + 1;
		}

		// required length
		return max;
	}

	// Driver program
	public static void main(String args[]) {
		int arr[] = { 3, 4, 6, 1, 9, 8, 2, 10 };
		int n = arr.length;
		int k = 2;

		System.out.println("Length = " + longSubarrWithKOddNum(arr, n, k));
	}
}
